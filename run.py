import sys

import numpy as np
np.set_printoptions(threshold=sys.maxsize)

from pymatgen.io.ase import AseAtomsAdaptor

from ase.calculators.emt import EMT
from ase.build import fcc110
from ase import Atoms, Atom
from ase.md.velocitydistribution import MaxwellBoltzmannDistribution
from ase import units
from ase.md import VelocityVerlet
from ase.constraints import FixAtoms

from mapp.descriptors.behlerparrinello import BehlerParrinello
from mapp.models.new_neuralnetwork import NeuralNetwork as NN


from amp import Amp
from amp.descriptor.gaussian import Gaussian, make_symmetry_functions
from amp.model.neuralnetwork import NeuralNetwork
from amp.model import LossFunction



def generate_data(count):
    """Generates test or training data with a simple MD simulation."""
    atoms = fcc110('Pt', (2, 2, 2), vacuum=7.)
    adsorbate = Atoms([Atom('Cu', atoms[7].position + (0., 0., 2.5)),
                       Atom('Cu', atoms[7].position + (0., 0., 5.))])
    atoms.extend(adsorbate)
    atoms.set_constraint(FixAtoms(indices=[0, 2]))
    atoms.set_calculator(EMT())
    MaxwellBoltzmannDistribution(atoms, 300. * units.kB)
    dyn = VelocityVerlet(atoms, dt=1. * units.fs)
    newatoms = atoms.copy()
    newatoms.set_calculator(EMT())
    newatoms.get_potential_energy()
    images = [newatoms]
    for step in range(count - 1):
        dyn.run(50)
        newatoms = atoms.copy()
        newatoms.set_calculator(EMT())
        newatoms.get_potential_energy()
        images.append(newatoms)
    return images

#images = generate_data(3)

#structures = []
#for image in images:
#        structures.append(AseAtomsAdaptor.get_structure(image))

symmetry = {'G2': {'eta': np.logspace(np.log10(0.05),
                                      np.log10(5.), num=4),
                   'Rc': 6.5}}

descriptors = {}

descriptors[0] = {}
descriptors[0]['G'] = [('Pt', [5.684992851444012, 0.2106192000039041, 5.390166558890312, 0.19175430208750674, 4.256043075034483, 0.12440779985226418, 1.6822001930225576, 0.01734595164908539]), ('Pt', [5.684992851444012, 0.2106192000039041, 5.390166558890311, 0.19175430208750674, 4.256043075034483, 0.12440779985226418, 1.682200193022558, 0.01734595164908539]), ('Pt', [5.6849928514440125, 0.2106192000039041, 5.390166558890312, 0.19175430208750674, 4.2560430750344835, 0.12440779985226418, 1.6822001930225579, 0.01734595164908539]), ('Pt', [5.684992851444012, 0.2106192000039041, 5.390166558890311, 0.19175430208750674, 4.256043075034483, 0.12440779985226418, 1.6822001930225576, 0.01734595164908539]), ('Pt', [5.684992851444012, 0.260573858333391, 5.390166558890312, 0.22966405101881365, 4.256043075034482, 0.12780810507947324, 1.682200193022558, 0.008416147189561756]), ('Pt', [5.6849928514440125, 0.8243158479011873, 5.3901665588903125, 0.7712983122426443, 4.2560430750344835, 0.5696899152382175, 1.682200193022558, 0.14929026171055762]), ('Pt', [5.6849928514440125, 0.3670045986144035, 5.390166558890312, 0.33419051273280376, 4.256043075034483, 0.21646548578019642, 1.6822001930225579, 0.028991313929706674]), ('Pt', [5.6849928514440125, 0.8139181843767319, 5.390166558890311, 0.7807053382256871, 4.256043075034483, 0.6519559354010992, 1.682200193022558, 0.33004677211841793]), ('Cu', [2.9157330669115304, 0.7930148160406122, 2.7121151409412696, 0.7597201780982163, 1.9654199684210791, 0.6334054295082175, 0.5781025869314682, 0.3262842633342541]), ('Cu', [0.19255622232979935, 0.7930148160406122, 0.17076028162870607, 0.7597201780982163, 0.09813067248696411, 0.6334054295082175, 0.008025714613117277, 0.3262842633342541])]

Gprime0 = 
descriptors[0]['Gprime'] = []
for key, value in Gprime0.items():
    descriptors[0]['Gprime'].append((key, value))

descriptors[1] = {}
descriptors[1]['G'] = [('Pt', [5.755426101650083, 0.1552023051989619, 5.457977832102, 0.14010784829177175, 4.312697290889362, 0.08726414816217341, 1.7088285395996483, 0.009873012831811951]), ('Pt', [5.768148687077901, 0.18673193944802705, 5.4703567746942365, 0.16958266847693756, 4.324001686900196, 0.10865742287093158, 1.7184167158144785, 0.014117249654668233]), ('Pt', [5.743985402134628, 0.15564089944691653, 5.451566411755111, 0.14054681111053358, 4.32649721687594, 0.08765546210767854, 1.7589999961531484, 0.00996865530479468]), ('Pt', [5.746953289254988, 0.17121727948760357, 5.454233721398661, 0.1550135360962248, 4.328240209931328, 0.09789078267224172, 1.7601564565250825, 0.011864712911766787]), ('Pt', [5.7739799413987125, 0.19105251693285136, 5.478777140277009, 0.16718527852007378, 4.342135748293709, 0.09000154733688641, 1.751222079475629, 0.0050940002642166455]), ('Pt', [5.750280942666251, 0.7325316428160777, 5.453996779299725, 0.6791388869338658, 4.314097046602597, 0.48066289821149666, 1.7228749122945168, 0.1041874918731682]), ('Pt', [5.740507759832618, 0.3168551579964681, 5.446880153734104, 0.2863538219747207, 4.316695423658024, 0.17928599223094488, 1.7411560584164583, 0.020845205580176045]), ('Pt', [5.748146148423098, 0.7390835315920994, 5.453225815481709, 0.7038285399185275, 4.318826962172981, 0.5666462352084846, 1.7376305175500435, 0.23706627509522268]), ('Cu', [2.413072689008825, 0.9087111254784807, 2.2325603482581813, 0.8768779947113201, 1.5761959860591546, 0.7582254628349888, 0.40226758896804915, 0.4718570971299209]), ('Cu', [0.2352425839101799, 0.9087111254784805, 0.20919704306447368, 0.8768779947113202, 0.12186850274168327, 0.7582254628349888, 0.010749014547776102, 0.4718570971299209])]

Gprime1 = 
descriptors[1]['Gprime'] = []
for key, value in Gprime1.items():
    descriptors[1]['Gprime'].append((key, value))

descriptors[2] = {}
descriptors[2]['G'] = [('Pt', [5.893762182693437, 0.18999893895845785, 5.595238142947333, 0.17239738269538377, 4.444148479290013, 0.1100667750592454, 1.808857017483315, 0.01417584022979502]), ('Pt', [5.964519304647166, 0.3009338383256909, 5.664704470174166, 0.27738011712221894, 4.509479401712004, 0.19086530109289318, 1.8649209486589509, 0.035672410160028346]), ('Pt', [5.8752463429458786, 0.19134212802361114, 5.584365144516255, 0.17382039676446773, 4.46453157921485, 0.11155323050514043, 1.8901602176045125, 0.014656109526129833]), ('Pt', [5.920331866988115, 0.26165196027691784, 5.628116177737304, 0.23985231583810554, 4.503954176682267, 0.16080110084964513, 1.922811871741965, 0.02646501302417725]), ('Pt', [5.957357386685789, 0.20760923824602323, 5.661683060790799, 0.18219556255129524, 4.5217905354444365, 0.09943448747382103, 1.90252098514, 0.006044501564316265]), ('Pt', [5.9242793799230675, 0.701568363210579, 5.626602311210593, 0.6530012656403671, 4.480436075844878, 0.4700949903545661, 1.8576180024051896, 0.10765784418213946]), ('Pt', [5.904021453447522, 0.3344953702787046, 5.611129323810524, 0.30364347039391193, 4.482767328083785, 0.19403987807769044, 1.8908381168275399, 0.02483713259193861]), ('Pt', [5.880356888026436, 0.7320814697772107, 5.585185134057504, 0.6994974052348572, 4.449448654037536, 0.5727292600816632, 1.851326679782422, 0.25962236691268487]), ('Cu', [2.7674986988710994, 0.8124625666109484, 2.5673544592711424, 0.7791713065810274, 1.8336816551688355, 0.6531548263487338, 0.48338777445818054, 0.346641895580967]), ('Cu', [0.15218260822609564, 0.8124625666109485, 0.13443345696946493, 0.7791713065810276, 0.07590336832582953, 0.6531548263487339, 0.005743443733029107, 0.346641895580967])]

Gprime2 = 
descriptors[2]['Gprime'] = []
for key, value in Gprime2.items():
    descriptors[2]['Gprime'].append((key, value))


#features = {}
#for i in range(len(structures)):
#    bp = BehlerParrinello(structures[i], symmetry, derivative=True)
#    descriptors[i] = bp.Gs
#    features[i] = {}
#    features[i]['energy'] = (images[i].get_potential_energy(apply_constraint=False)/len(images[i]))
#    features[i]['force'] = image.get_forces(apply_constraint=False)

mode = NN(elements=['Pt', 'Cu'], activation='tanh')
mode.fit(descriptors, features)
